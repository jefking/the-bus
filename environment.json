{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "acrName": {
        "defaultValue": "thebusacr",
        "type": "string",
        "metadata": {
            "description": "Name of the Azure Container Registry"
        }
    },
    "acrTier": {
        "defaultValue": "Basic",
        "allowedValues": [
            "Basic",
            "Standard",
            "Premium"
        ],
        "type": "string",
        "metadata": {
            "description": "Azure Container Registry Tier"
        }
    },
      "eventGridTopicName": {
        "type": "string",
        "metadata": {
          "description": "Name of Event Grid Topic"
        },
        "defaultValue": "[concat('core-events-', uniqueString(resourceGroup().id))]"
      },
      "eventGridSubscriptionName": {
        "type": "string",
        "metadata": {
          "description": "Name of Event Grid Subscription"
        },
        "defaultValue": "[concat('all-events-', uniqueString(resourceGroup().id))]"
      },
      "eventGridSubscriptionIncludedEventTypes": {
        "type": "string",
        "metadata": {
          "description": "Comma delimited list of filters for Event Grid Subscription. Default value is 'All' and other event types depend on how Event Grid Topic defines"
        },
        "defaultValue": "All"
      }
    },
    "variables": {
      "image": "hello-world",
      "storageAccountName": "thebus",
      "containerGroupName": "compute-bus",
      "memoryInGb": 1.5,
      "cpuCores": 1,
      "location": "[resourceGroup().location]",
      "eventGridTopic": {
        "name": "[parameters('eventGridTopicName')]",
        "resourceId": "[resourceId('Microsoft.EventGrid/topics', parameters('eventGridTopicName'))]",
        "location": "[variables('location')]"
      },
      "eventGridSubscription": {
        "name": "[parameters('eventGridSubscriptionName')]",
        "location": "[variables('location')]",
        "filter": {
          "includedEventTypes": "[split(parameters('eventGridSubscriptionIncludedEventTypes'), ',')]"
        }
      }
    },
    "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts",
          "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
          },
          "kind": "StorageV2",
          "name": "[variables('storageAccountName')]",
          "apiVersion": "2018-07-01",
          "location": "[variables('location')]",
          "properties": {
              "accessTier": "Hot",
              "encryption": {
                  "services": {
                      "blob": {
                          "enabled": true
                      },
                      "queue": {
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              }
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "name": "default/arm",
                    "apiVersion": "2018-03-01-preview",
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "sku": {
                "name": "[parameters('acrTier')]",
                "tier": "[parameters('acrTier')]"
            },
            "name": "[parameters('acrName')]",
            "apiVersion": "2017-10-01",
            "location": "[variables('location')]",
            "properties": {
                "adminUserEnabled": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "[variables('containerGroupName')]",
            "apiVersion": "2018-02-01-preview",
            "location": "[variables('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[variables('containerName')]",
                        "properties": {
                            "image": "[variables('image')]",
                            "environmentVariables": [
                                {
                                    "name": "topic",
                                    "value": "EVENT GRID TOPIC"
                                },
                                {
                                    "name": "connection",
                                    "value": "EVENT GRID CONNECTION"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[variables('cpuCores')]",
                                    "memoryInGb": "[variables('memoryInGb')]"
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/eventSubscriptions",
            "name": "[concat(parameters('storageName'), '/Microsoft.EventGrid/', variables('eventGridSubscription').name)]",
            "apiVersion": "2018-01-01",
            "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "filter": {
                    "subjectBeginsWith": "",
                    "subjectEndsWith": "",
                    "isSubjectCaseSensitive": false,
                    "includedEventTypes": [
                        "All"
                    ]
                }
            }
        }
    ]
}